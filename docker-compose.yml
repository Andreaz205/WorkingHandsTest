version: '3'

services:
    nginx:
        image: nginx:latest
        volumes:
            - ./:/var/www
            - ./_docker/nginx/conf.d:/etc/nginx/conf.d
            - /var/www/storage/app/public/:/var/www/storage/app/public/
            - /var/www/storage/app/public/:/var/www/public/storage
        ports:
            - "8000:80"
        depends_on:
            - app
        container_name: omg_nginx
        networks:
            - application

    app:
        build:
            context: ./
            dockerfile: ./_docker/app/Dockerfile
        volumes:
            - ./:/var/www
            - /var/www/storage/app/public/:/var/www/storage/app/public/
            - ./_docker/app/zzz-xdebug.ini:/usr/local/etc/php/conf.d/zzz-xdebug.ini
            - /var/www/storage/app/public/:/var/www/public/storage
        container_name: omg_app
        environment:
            DB_CONNECTION: mysql
            DB_HOST: omg_db
            DB_PORT: 3306
            DB_DATABASE: laravel
            DB_USERNAME: root
            DB_PASSWORD: password
            REDIS_HOST: omg_redis
            REDIS_PORT: 6379
            QUEUE_CONNECTION: redis
            PHP_IDE_CONFIG: "serverName=OMG"
        depends_on:
            - db
            - redis
        networks:
            - application

    db:
        image: mysql:8.0
        restart: always
        environment:
            - MYSQL_ROOT_PASSWORD=password
            - MYSQL_DATABASE=laravel
        container_name: omg_db
        command: --default-authentication-plugin=mysql_native_password --skip-name-resolve --skip-host-cache
        ports:
            - "3306:3306"
        networks:
            - application
        volumes:
            - ./_docker/mysql/data/:/var/lib/mysql:cached
            - ./_docker/mysql/logs/slow.log:/var/log/mysql/slow.log
            - ./_docker/mysql/conf.d/mysqld.cnf:/etc/mysql/conf.d/mysqld.cnf

    redis:
        image: 'redis:alpine'
        ports:
        - '${FORWARD_REDIS_PORT:-6379}:6379'
        healthcheck:
            test: [ "CMD", "redis-cli", "ping" ]
            retries: 3
            timeout: 5s
        container_name: omg_redis
        networks:
            - application

    frontend:
        build:
            context: ./
            dockerfile: ./_docker/frontend/Dockerfile
        container_name: omg_vue
        ports:
            - "3000:8080"
        volumes:
            - ./resources/frontend:/app
        command: sh -c "
            npm install
            && npm run serve
            "
        networks:
            - application

networks:
    application:
        driver: bridge






